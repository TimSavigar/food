version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: recipe-ideas-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: recipe-ideas
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - recipe-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: recipe-ideas-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - recipe-network

  # Backend API
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: recipe-ideas-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/recipe-ideas?authSource=admin
      - REDIS_URL=redis://redis:6379
      - PORT=5000
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./server/logs:/app/logs
    networks:
      - recipe-network

  # Frontend Client
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: recipe-ideas-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - recipe-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: recipe-ideas-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - recipe-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  recipe-network:
    driver: bridge 